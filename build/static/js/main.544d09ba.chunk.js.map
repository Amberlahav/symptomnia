{"version":3,"sources":["components/Landingpage.js","components/Dashboard.js","components/Navbar.js","components/Login.js","components/Signup.js","components/Symptoms.js","components/Symptom.js","components/NewSymptom.js","components/Entries.js","components/Entry.js","components/NewEntry.js","components/App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Landingpage","props","login","e","preventDefault","setState","redirect","state","classes","this","to","history","push","pathname","Container","component","maxWidth","CssBaseline","className","paper","Avatar","avatar","form","noValidate","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","submit","onClick","Grid","container","item","xs","Box","mt","PureComponent","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","backgroundColor","palette","secondary","main","width","Dashboard","onClickSelectSymptom","symptom","selectedSymptom","showEntries","showSymptoms","onClickGoBackToSymptoms","handleSymptomChange","event","input","target","prevState","newSymptom","handleButtonSubmit","a","data","fetch","method","headers","body","JSON","stringify","response","json","prevSymptoms","symptoms","nextSymptoms","Component","Navbar","src","alt","Login","Signup","Symptoms","handleToggleModal","modalOpen","lastRecorded","Paper","root","map","Symptom","key","_id","getLastRecorded","Modal","aria-labelledby","aria-describedby","modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","out","padding","background","boxShadow","divider","height","marginLeft","flex","iconButton","justifyContent","border","shadows","borderRadius","outline","dateFormat","require","useStyles","makeStyles","entries","sort","reverse","date","Divider","orientation","length","NewSymptom","onChange","TextareaAutosize","aria-label","rows","placeholder","Entries","entry","Entry","severity","App","console","log","result","results","exact","path","render","renderProps","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.544d09ba.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { Redirect } from 'react-router-dom';\n\nconst styles = (theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nclass Landingpage extends PureComponent {\n  constructor (props) {\n    super(props);\n    this.state = {\n        redirect: false\n    };\n    \n  }\n\n  login = (e) => {\n      e.preventDefault();\n      this.setState({\n          redirect: true\n      })\n  }\n \n  render () {\n    const { classes } = this.props;\n    return (\n        this.state.redirect ?\n        <Redirect to={this.props.history.push({\n            pathname:\"/dashboard\",\n            state:{} \n           })} />\n           :\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Remember me\"\n                    />\n                    <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={this.login}\n                    >\n                        Sign in\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                        Forgot password?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                        </Link>\n                    </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(styles)(Landingpage);","import React, { Component } from 'react';\nimport { Navbar , Symptoms , Entries } from './';\nimport '../App.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      symptoms: '',\n      showEntries: false,\n      showSymptoms: true,\n      selectedSymptom: '',\n      newSymptom:''\n    }\n  }\n\n  componentDidMount(){\n    if (this.props.symptoms)\n    this.setState({\n      symptoms: this.props.symptoms\n    })\n  }\n\n  onClickSelectSymptom = (e , symptom) =>{\n    this.setState({\n      selectedSymptom: symptom,\n      showEntries: !this.state.showEntries,\n      showSymptoms: !this.state.showSymptoms\n    })\n  }\n\n\n  onClickGoBackToSymptoms = () =>{\n    this.setState({\n      selectedSymptom: '',\n      showEntries: !this.state.showEntries,\n      showSymptoms: !this.state.showSymptoms\n    })\n  }\n\n  handleSymptomChange = (event) => {\n    const input = event.target.value\n\n    const prevState = this.state;\n    this.setState({\n      ...prevState,\n      newSymptom: input\n    })\n  }\n\n  handleButtonSubmit = async (event) => {\n\n    const data = {\n      name: this.state.newSymptom\n    }\n    const response = await fetch('/api/symptoms', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }) \n    const newSymptom = await response.json()\n\n    const prevSymptoms = this.state.symptoms\n    const nextSymptoms = [...prevSymptoms, newSymptom]\n\n    this.setState({\n      symptom: nextSymptoms,\n      newSymptom: ''\n    })\n  }\n\n\n  render () {\n    return (\n      <div className='App'>\n        <Navbar />\n        {\n           this.state.showEntries ?\n            <Entries selectedSymptom={this.state.selectedSymptom} onClickGoBackToSymptoms={this.onClickGoBackToSymptoms}/>\n           :\n            <Symptoms symptoms={this.props.symptoms}  onClickSelectSymptom={this.onClickSelectSymptom} newSymptom={this.state.newSymptom} \n            handleSymptomChange={this.handleSymptomChange}\n            handleButtonSubmit={this.handleButtonSubmit}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\n\n// const useStyles = makeStyles(theme => ({\n//     root: {\n//       justifyContent: 'space-between',\n//     },\n//     menuButton: {\n//       marginRight: theme.spacing(2),\n//     },\n//     title: {\n//       flexGrow: 1,\n//     },\n//   }));\n// const classes = useStyles();\nclass Navbar extends Component {\n    \n  render () {\n    return (\n        <nav>\n            <img src=\"\" alt=\"symptomnia\" />\n            <div className=\"nav-btn-container\">\n                <Button color=\"inherit\">Logout</Button>\n                <Button color=\"inherit\">Signup</Button>\n            </div>\n        </nav>\n    );\n  }\n}\n// export default makeStyles(useStyles)(Navbar);\nexport default Navbar;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Login extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n    }\n  }\n\n  render () {\n    return (\n      <div className=''>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Signup extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n    }\n  }\n\n  render () {\n    return (\n      <div className=''>\n      </div>\n    );\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { Symptom , NewSymptom} from './';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport '../App.css';\n\nconst useStyles = (theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n    background: 'none',\n    boxShadow:'none'\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border:'none'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: '20px',\n    height: '50vh',\n    width: '500px',\n    borderRadius: '4px',\n    outline:'none'\n  },\n});\n\nclass Symptoms extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      symptoms: this.props.symptoms,\n      modalOpen: false,\n      lastRecorded: ''\n    }\n\n  }\n\n  handleToggleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    })\n  };\n\n  render () {\n    const { classes } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <div className=\"header-container\">\n          <h1 className=\"symptoms-heading\">Your Symptoms</h1>\n          <Paper component=\"form\" className={classes.root}>\n             <TextField id=\"standard-basic\" label=\"Search Symptoms\" />\n          </Paper>\n        </div>\n        {\n          this.state.symptoms && this.props.onClickSelectSymptom ?\n            [\n              <div className=\"symptoms-container\">\n                  {this.state.symptoms.map((symptom) => (\n                  <Symptom\n                    symptom={symptom}\n                    key={symptom._id}\n                    onClickSelectSymptom={this.props.onClickSelectSymptom}\n                    getLastRecorded={this.getLastRecorded}\n                    lastRecorded={this.state.lastRecorded}\n                  />\n                ))}\n              </div>\n            ,\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleToggleModal}>\n            ADD NEW SYMPTOM\n            </Button>,\n            this.state.modalOpen &&\n              <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={this.state.modalOpen}\n                onClose={this.handleToggleModal}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                  timeout: 500,\n                }}\n              >\n                <Fade in={this.state.modalOpen} out={false}>\n                  <div className={classes.paper}>\n                    <NewSymptom \n                      newSymptom={this.props.newSymptom} \n                      handleSymptomChange={this.props.handleSymptomChange}\n                      handleButtonSubmit={this.props.handleButtonSubmit}\n                    />\n                  </div>\n                </Fade>\n              </Modal>\n          ]\n          : \n          [<p>You have no symptoms recorded.</p>,\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleToggleModal}>\n            ADD NEW SYMPTOM\n            </Button>]\n            \n        }\n      </div>\n    );\n  }\n}\n\nSymptoms.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(useStyles)(Symptoms);","import React from 'react';\nimport { Entries } from './';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles } from '@material-ui/core/styles';\n\nvar dateFormat = require('dateformat');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\n\n\nexport default function Symptom({ symptom , onClickSelectSymptom}) {\n  const classes = useStyles();\n\n  const lastRecorded = symptom.entries.sort().reverse()[0]\n\n  return(\n    <div onClick={(e) => onClickSelectSymptom(e, symptom)} className=\"symptom-container\">\n          <div className=\"symptoms-list-container-element\">\n            <p className=\"symptom-title\">\n                {symptom.name}\n            </p>\n              {\n                lastRecorded &&\n                <span className=\"date-label small-light-text\">\n                  Last recorded:\n                  {dateFormat(lastRecorded.date, 'mm/dd/yyyy')}\n                </span>\n              }\n          </div>\n          <Divider className={classes.divider} orientation=\"vertical\" />\n          <div className=\"symptoms-list-container-element\">\n              <p className=\"small-light-text\">Entries</p>\n              <span className=\"bold-md-text\">{symptom.entries.length}</span>\n          </div>\n          <Divider className={classes.divider} orientation=\"vertical\" />\n          <div className=\"symptoms-list-container-element\">\n            <p className=\"small-light-text\">Avg Severity</p>\n            <span className=\"bold-md-text\">Mild</span>\n          </div>\n          <Divider className={classes.divider} orientation=\"vertical\" />\n          <div className=\"symptoms-list-container-element\">\n              <p className=\"small-light-text\">Actions</p>\n              <span><DeleteIcon /></span>\n              <span><EditIcon /></span>\n          </div>\n    </div>\n\n  )\n\n}\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport '../App.css';\n\nclass NewSymptom extends Component {\n  render () {\n    return (\n      <div className=''>\n        <p className=\"symptom-title\">Add New Symptom</p>\n        <form>\n          <TextField id=\"standard-basic\" label=\"Name\" \n            onChange={this.props.handleSymptomChange}\n            value={this.props.newSymptom}\n          />\n          <TextareaAutosize aria-label=\"minimum height\" rows={3} placeholder=\"Minimum 3 rows\" />\n          <Button key='i' variant=\"contained\" color=\"primary\" onClick={this.props.handleButtonSubmit}>\n                ADD\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewSymptom;","import React, { Component } from 'react';\nimport { Entry } from './';\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\n\nclass Entries extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n    }\n  }\n\n  render () {\n    return (\n      <div className='wrapper'>\n        <div className=\"header-container\">\n          <h1>Your Entries For {this.props.selectedSymptom.name}</h1>\n          <Button onClick={this.props.onClickGoBackToSymptoms} variant=\"contained\" color=\"primary\">\n                  BACK\n          </Button>\n        </div>\n          {\n            this.props.selectedSymptom.entries.length > 0 ?\n            [this.props.selectedSymptom.entries.map((entry) => (\n              <Entry\n                entry={entry}\n                key={entry._id}\n              />\n            )),\n              <Button key='i' variant=\"contained\" color=\"primary\">\n                NEW ENTRY\n              </Button>]\n            : \n              [<p>You have no entries recorded.</p>,\n                <Button variant=\"contained\" color=\"primary\">\n                NEW ENTRY\n              </Button>\n            ]\n          }\n      </div>\n    );\n  }\n}\n\nexport default Entries;","import React from 'react';\n\nconst Entry = ({ entry }) =>\n    <div>\n        <p>{entry.severity}</p>\n        {/* <p>{entry.date}</p> */}\n    </div>;\n\nexport default Entry;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass NewEntry extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n    }\n  }\n\n  render () {\n    return (\n      <div className=''>\n      </div>\n    );\n  }\n}\n\nexport default NewEntry;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Landingpage, Dashboard , Login, Signup } from './';\nimport '../App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      symptoms: ''\n    }\n  }\n\n  async componentDidMount() {\n    const result = await fetch('/api/symptoms')\n    const data = await result.json()\n    console.log(data.results)\n    const prevState = this.state;\n    this.setState({\n      ...prevState,\n      symptoms: data.results\n    })\n  }\n\n  login = (e) => {\n    e.preventDefault();\n    console.log('logged in')\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={Landingpage} /> \n            <Route exact path=\"/dashboard\"  \n              render={(renderProps) => {\n                  return this.state.symptoms &&\n                    <Dashboard\n                      {...renderProps}\n                      symptoms={this.state.symptoms}\n                    />\n              }}\n            />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* global fetch */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}